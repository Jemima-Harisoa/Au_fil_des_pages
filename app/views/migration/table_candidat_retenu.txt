CREATE VIEW view_scoring AS
SELECT 
    c.id_candidat,
    t.score_test,
    pe.score_entretien,
    ROUND(((COALESCE(t.score_test,0) + COALESCE(pe.score_entretien,0)) / 
           (CASE WHEN (t.score_test IS NOT NULL)::int + (pe.score_entretien IS NOT NULL)::int > 0 
                 THEN (t.score_test IS NOT NULL)::int + (pe.score_entretien IS NOT NULL)::int 
                 ELSE 1 END)
    )::numeric, 2) AS moyenne
FROM candidats c
LEFT JOIN tests t ON c.id_candidat = t.id_candidat
LEFT JOIN planning_entretien pe ON c.id_candidat = pe.id_candidat;


CREATE TABLE candidats (
  id_candidat INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_personne int,
  id_annonce int,
  cv_url varchar,
  poste varchar
);

CREATE TABLE personnes (
  id_personne INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nom varchar,
  prenom varchar,
  date_naissance date,
  contact varchar UNIQUE,
  lien_image varchar,
  mdp varchar
);


CREATE TABLE type_contrats(
  id_type_contrat int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nom varchar
); 

CREATE TABLE contrats (
  id_contrat INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_candidat int,
  id_type_contrat int ,
  url_contrat varchar
);